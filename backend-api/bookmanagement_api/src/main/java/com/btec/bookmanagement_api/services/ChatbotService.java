package com.btec.bookmanagement_api.services;

import com.btec.bookmanagement_api.entities.Book;
import com.btec.bookmanagement_api.entities.Category;
import com.btec.bookmanagement_api.entities.User;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.stream.Collectors;

@Service
@RequiredArgsConstructor
public class ChatbotService {

    private final OpenAiService openAiService;

    // ‚úÖ 1. G·ª£i √Ω truy·ªán b·∫±ng AI d·ª±a theo ng∆∞·ªùi d√πng
    public String recommendBookByAI(User user, String userInput) {
        String prompt = buildPersonalizedPrompt(user, userInput);
        return openAiService.getRecommendation(prompt);
    }

    // ‚úÖ 2. T√≥m t·∫Øt truy·ªán
    public String summarizeBook(Book book) {
        String prompt = "H√£y t√≥m t·∫Øt truy·ªán c√≥ ti√™u ƒë·ªÅ \"" + book.getTitle() +
                "\" v·ªõi m√¥ t·∫£: " + book.getDescription();
        return openAiService.getRecommendation(prompt);
    }

    // ‚úÖ 3. Chat h·ªèi AI t·ªïng qu√°t
    public String chatWithAI(User user, String message) {
        String prompt = "B·∫°n l√† m·ªôt AI h·ªó tr·ª£ ng∆∞·ªùi ƒë·ªçc truy·ªán. Ng∆∞·ªùi d√πng h·ªèi: " + message;
        return openAiService.getRecommendation(prompt);
    }

    // üîß H√†m ph·ª• tr·ª£ ƒë·ªÉ t·∫°o prompt c√° nh√¢n h√≥a
    private String buildPersonalizedPrompt(User user, String userInput) {
        StringBuilder prompt = new StringBuilder("B·∫°n l√† AI tr·ª£ l√Ω ƒë·ªçc truy·ªán.\n");

        if (user.getFavoriteCategories() != null && !user.getFavoriteCategories().isEmpty()) {
            prompt.append("Ng∆∞·ªùi d√πng y√™u th√≠ch c√°c th·ªÉ lo·∫°i: ");
            prompt.append(user.getFavoriteCategories().stream()
                    .map(Category::getName)
                    .collect(Collectors.joining(", ")));
            prompt.append(".\n");
        }

        prompt.append("Ng∆∞·ªùi d√πng mu·ªën: ").append(userInput).append("\n");
        prompt.append("H√£y g·ª£i √Ω truy·ªán ph√π h·ª£p.");
        return prompt.toString();
    }
}
